#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define MOUSE 1
#define SYMBOL 2
#define NUMBER 3
#define FUNCTION 4
#define GAME 5
#define RESET 6

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35  

&sk {
  release-after-ms = <600>;
  quick-release;
};

&sl {
  ignore-modifiers;
};

&mt {
  flavor = "tap-preferred";
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

&caps_word {
  /delete-property/ ignore-modifiers;
};

/ {
  behaviors {
    hml: hml {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <250>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    hmr: hmr {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <250>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };
    hml_s: hml_s {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <0>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    hmr_s: hmr_s {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <0>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };


    smart_shift: smart_shift {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&sk LSHIFT>, <&caps_word>;
      mods = <(MOD_LSFT)>;
    };
  };

  combos {
    compatible = "zmk,combos";
    timeout-ms = <20>;
    require-prior-idle-ms = <250>;

    combo_reset_layer_left {
      key-positions = <20 24>;
      bindings = <&to RESET>;
    };
    combo_reset_layer_right {
      key-positions = <25 29>;
      bindings = <&to RESET>;
    };
    combo_reset_central {
      key-positions = <32 33>;
      bindings = <&bootloader>;
      require-prior-idle-ms = <2000>;
    };
    combo_normal {
      key-positions = <7 8>;
      bindings = <&to BASE>;
    };
    combo_fn {
      key-positions = <27 28>;
      bindings = <&sl FUNCTION>;
    };
    combo_genshin {
      key-positions = <5 9>;
      bindings = <&to GAME>;
    };
    combo_esc {
      key-positions = <1 2>;
      bindings = <&kp ESCAPE>;
    };
    combo_tab {
      key-positions = <2 3>;
      bindings = <&kp TAB>;
    };
    combo_cdel {
      key-positions = <11 12>;
      bindings = <&kp LC(BACKSPACE)>;
    };
    combo_unlock {
      key-positions = <0 4>;
      bindings = <&studio_unlock>;
    };
  };

  chosen {
    zmk,physical-layout = &charybdis_6col_layout;
  };

  keymap {
    compatible = "zmk,keymap";

    Base {
      display-name = "Base";
      bindings = <
        &kp ESC     &kp Q    &kp W       &kp E           &kp R        &kp T                     &kp Y                &kp U                      &kp I        &kp O       &kp P       &kp LBKT
        &kp TAB     &kp A    &kp S       &kp D           &kp F        &kp G                     &kp H                &kp J                      &kp K        &kp L       &kp SEMI    &kp SQT 
        &kp LSHIFT  &kp Z    &kp X       &kp C           &kp V        &kp B                     &kp N                &kp M                      &kp COMMA    &kp DOT     &kp FSLH    &kp RBKT
                                &kp LGUI    &mo 1      &lt SYMBOL RET              &kp SPACE       &kp BSPC
      >;
    };

    Lower {
      display-name = "Base";
      bindings = <
        &trans    &trans    &kp UP     &trans     &trans    &trans       &kp N7   &kp N8  &kp N9   &kp N0  &kp HOME   &kp F1
        &trans  &kp LEFT  &kp DOWN  &kp RIGHT     &trans    &trans       &kp N4   &kp N5  &kp N6    &none    &trans  &kp F10
        &kp LEFT_ALT    &trans    &trans     &trans  &kp MINUS  &kp PLUS       &kp N1   &kp N2  &kp N3  &kp DOT    &trans  &kp F20
                          &kp LGUI  &kp SPACE    &trans                       &kp RCTRL  &kp RET
      >;
    };

    Raise {
        label = "Raise";
        bindings = <
              &trans      &kp EXCL       &kp AT    &kp HASH   &kp DLLR     &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp DEL
              &trans      &bt BT_CLR     &bt BT_PRV  &bt BT_NXT     &trans         &to 3    &kp UNDER  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
              &trans      &out OUT_TOG   &bootloader      &trans     &trans        &trans    &kp MINUS   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                     &kp LGUI  &kp SPACE  &kp LEFT_ALT       &trans    &bootloader
        >;
    };

        Game {
            label = "Game";
            bindings = <
&trans  &trans  &trans  &trans  &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans         &sl 4      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans      &trans  &trans  &trans  &trans  &trans   &to 0
                        &trans  &trans  &kp LEFT_ALT    &kp RGUI  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
 &kt F5  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
  &to 3         &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans       &kp LA(F4)
&kp F10         &none         &to 0         &none  &kp NUMBER_6  &kp NUMBER_7           &trans         &trans         &trans         &trans         &trans            &to 0
                                            &kp J         &kp I         &kp M           &trans         &trans
            >;
        };

        Mouse {
            bindings = <
   &trans  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans
   &trans  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans
   &mkp MCLK  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
      >;
    };

    Reset {
      display-name = "Reset";
      bindings = <
        &none &none &none &none &none                &none &none &none &none &none     
        &none &none &none &none &none                &none &none &none &none &none    
        &none &none &none &none &none                &none &none &none &none &none
                    &none &none &bootloader          &bootloader &none               
      >;
    };

  };
};
